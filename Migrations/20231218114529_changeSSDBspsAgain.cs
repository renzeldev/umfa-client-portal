using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace ClientPortal.Migrations
{
    public partial class changeSSDBspsAgain : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql("CREATE OR ALTER PROC [dbo].[spDBSmartServicesMainElectricity]\r\n(\r\n@BuildingId int,\r\n@PeriodType int,\r\n@StartDate smalldatetime,\r\n@EndDate smalldatetime\r\n)\r\n\r\nAS\r\n\r\n--declare\r\n--@BuildingId int = 0,\r\n--@PeriodType int = 3,\r\n--@StartDate smalldatetime = '2023-11-11',\r\n--@EndDate smalldatetime = '2023-12-12'\r\n\r\ndeclare @tSupplies table (Id int identity(1,1), BuildingId int, ScadaSerial varchar(150), SupplyTypeId int, SupplyTypeName varchar(150),\r\n\t\t\t\t\t\t\tSupplyToId int, SupplyToName varchar(150), SupplyToLocationTypeId int, SupplyToLocationTypeName varchar(150),\r\n\t\t\t\t\t\t\tEnergy decimal(18,4) null)\r\n\r\ndeclare @tProfile table (Id int identity(1,1), SupplyToLocationTypeId int, SupplyToLocationName varchar(150), ReadingDate smalldatetime, [Month] int, [Day] int, [Hour] int\r\n\t\t\t\t\t\t\t, [WeekDay] int, Energy decimal(18,4), MaxDemand decimal(18,4))\r\n\r\n--get all bulk electricity meters for the building\r\ninsert into @tSupplies (BuildingId, ScadaSerial, SupplyTypeId, SupplyTypeName, SupplyToId, SupplyToName, SupplyToLocationTypeId, SupplyToLocationTypeName)\r\nselect distinct\r\nmm.BuildingId, mm.ScadaSerial, s.SupplyTypeId, s.SupplyTypeName\r\n, st.SupplyToId, st.SupplyToName, lt.SupplyToLocationTypeId, lt.SupplyToLocationName\r\nfrom\r\nMappedMeters mm\r\njoin SupplyTypes s on (mm.SupplyTypeId = s.SupplyTypeId)\r\njoin SupplyTos st on (s.SupplyTypeId = st.SupplyTypeId and mm.SupplyToId = st.SupplyToId)\r\njoin SupplyToLocationTypes lt on (st.SupplyToId = lt.SupplyToId and mm.LocationTypeId = lt.SupplyToLocationTypeId)\r\nwhere\r\n(mm.BuildingId = @BuildingId or @BuildingId = 0)\r\nand s.SupplyTypeId = 1\r\nand st.SupplyToId = 1\r\n\r\ninsert into @tProfile\r\nselect \r\nlt.SupplyToLocationTypeId, lt.SupplyToLocationName, pd.ReadingDate\r\n, DATEPART(MM, pd.ReadingDate) as [Month]\r\n, DATEPART(DD, pd.ReadingDate) as [Day]\r\n, DATEPART(HH, pd.ReadingDate) as [Hour]\r\n, DATEPART(W, pd.ReadingDate) as [WeekDay]\r\n, (case when lt.SupplyToLocationTypeId is null then 0 else sum(isnull(P1, 0)) end) as Energy\r\n, (sum(isnull(pd.kVA, 0))) as MaxDemand\r\nfrom \r\n@tSupplies s\r\njoin ScadaProfileData pd on (s.ScadaSerial = pd.SerialNumber and pd.IsActive = 1 and pd.ReadingDate between @StartDate and @EndDate and pd.IsActive = 1)\r\nright join SupplyToLocationTypes lt on (s.SupplyToLocationTypeId = lt.SupplyToLocationTypeId)\r\nwhere\r\nlt.SupplyToId = 1\r\nand lt.SupplyToLocationTypeId in (1, 2, 3, 4, 56)\r\ngroup by\r\nlt.SupplyToLocationTypeId, lt.SupplyToLocationName, pd.ReadingDate\r\n\r\n--select * from @tProfile\r\n\r\nselect distinct SupplyToLocationTypeId, SupplyToLocationName, sum(Energy/2.0) over (Partition by SupplyToLocationName) as Energy\r\nfrom @tProfile\r\nunion\r\nselect 9999, 'Maximum Demand', max(MaxDemand) from @tProfile\r\norder by\r\nSupplyToLocationTypeId\r\n\r\nif @PeriodType = 1 --Daily\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Month], [Day], [Hour], sum(Energy/2.0) as Energy\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Month], [Day], [Hour]\r\n\torder by\r\n\tSupplyToLocationName, [Month], [Day], [Hour]\r\nend\r\n\r\nif @PeriodType = 2 --Weekly\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Month], [Day], sum(Energy/2.0) as Energy\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Month], [Day]\r\n\torder by\r\n\tSupplyToLocationName, [Month], [Day]\r\nend\r\n\r\nif @PeriodType = 3 --Monthly\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Month], [Day], [WeekDay]\r\n\t, case [WeekDay] \r\n\t\twhen 1 then 'Su'\r\n\t\twhen 2 then 'Mo'\r\n\t\twhen 3 then 'Tu'\r\n\t\twhen 4 then 'We'\r\n\t\twhen 5 then 'Th'\r\n\t\twhen 6 then 'Fr'\r\n\t\twhen 7 then 'Sa'\r\n\t\tend as [DayOfWeek]\r\n\t, sum(Energy/2.0) as Energy\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Month], [Day], [WeekDay]\r\n\torder by\r\n\tSupplyToLocationName, [Month], [Day], [WeekDay]\r\nend\r\n\r\nif @PeriodType = 4 --Yearly\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Month]\r\n\t, case [Month] \r\n\t\twhen 1 then 'Jan'\r\n\t\twhen 2 then 'Feb'\r\n\t\twhen 3 then 'Mar'\r\n\t\twhen 4 then 'Apr'\r\n\t\twhen 5 then 'May'\r\n\t\twhen 6 then 'Jun'\r\n\t\twhen 7 then 'Jul'\r\n\t\twhen 8 then 'Aug'\r\n\t\twhen 9 then 'Sep'\r\n\t\twhen 10 then 'Oct'\r\n\t\twhen 11 then 'Nov'\r\n\t\twhen 12 then 'Dec'\r\n\t\tend as [MonthShort]\r\n\t, sum(Energy/2.0) as Energy\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Month]\r\n\torder by\r\n\tSupplyToLocationName, [Month]\r\nend\r\n\r\nselect ReadingDate, sum(Energy) as Energy, Max(MaxDemand) as MaxDemand from @tProfile where ReadingDate is not null group by ReadingDate order by ReadingDate\r\n\r\nSelect top 1 ReadingDate, Energy, MaxDemand, isnull((Energy / nullif(MaxDemand, 0)), 0) as PowerFactor from @tProfile where MaxDemand = (Select max(MaxDemand) from @tProfile)\r\n");
            migrationBuilder.Sql("CREATE OR ALTER PROC [dbo].[spDBSmartServicesMainWater]\r\n(\r\n@BuildingId int,\r\n@PeriodType int,\r\n@StartDate smalldatetime,\r\n@EndDate smalldatetime\r\n)\r\n\r\nAS\r\n\r\n--declare\r\n--@BuildingId int = 0,\r\n--@PeriodType int = 4,\r\n--@StartDate smalldatetime = '2023-11-01',\r\n--@EndDate smalldatetime = '2023-12-01'\r\n\r\ndeclare @tSupplies table (Id int identity(1,1), BuildingId int, ScadaSerial varchar(150), SupplyTypeId int, SupplyTypeName varchar(150),\r\n\t\t\t\t\t\t\tSupplyToId int, SupplyToName varchar(150), SupplyToLocationTypeId int, SupplyToLocationTypeName varchar(150),\r\n\t\t\t\t\t\t\tEnergy decimal(18,4) null)\r\n\r\ndeclare @tProfile table (Id int identity(1,1), SupplyToLocationTypeId int, SupplyToLocationName varchar(150), ReadingDate smalldatetime, [Month] int, [Day] int, [Hour] int\r\n\t\t\t\t\t\t\t, [WeekDay] int, Energy decimal(18,4), MaxDemand decimal(18,4))\r\n\r\n--get all bulk electricity meters for the building\r\ninsert into @tSupplies (BuildingId, ScadaSerial, SupplyTypeId, SupplyTypeName, SupplyToId, SupplyToName, SupplyToLocationTypeId, SupplyToLocationTypeName)\r\nselect distinct\r\nmm.BuildingId, mm.ScadaSerial, s.SupplyTypeId, s.SupplyTypeName\r\n, st.SupplyToId, st.SupplyToName, lt.SupplyToLocationTypeId, lt.SupplyToLocationName\r\nfrom\r\nMappedMeters mm\r\njoin SupplyTypes s on (mm.SupplyTypeId = s.SupplyTypeId)\r\njoin SupplyTos st on (s.SupplyTypeId = st.SupplyTypeId and mm.SupplyToId = st.SupplyToId)\r\njoin SupplyToLocationTypes lt on (st.SupplyToId = lt.SupplyToId and mm.LocationTypeId = lt.SupplyToLocationTypeId)\r\nwhere\r\n(mm.BuildingId = @BuildingId or @BuildingId = 0)\r\nand s.SupplyTypeId = 4\r\nand st.SupplyToId = 9\r\n\r\ninsert into @tProfile\r\nselect \r\nlt.SupplyToLocationTypeId, lt.SupplyToLocationName, pd.ReadingDate\r\n, DATEPART(MM, pd.ReadingDate) as [Month]\r\n, DATEPART(DD, pd.ReadingDate) as [Day]\r\n, DATEPART(HH, pd.ReadingDate) as [Hour]\r\n, DATEPART(W, pd.ReadingDate) as [WeekDay]\r\n, (case when lt.SupplyToLocationTypeId is null then 0 else sum(isnull(P1, 0)) end) as Energy\r\n, sum((isnull(pd.kVA, 0))) as MaxDemand\r\n--pd.*\r\nfrom \r\n@tSupplies s\r\njoin ScadaProfileData pd on (s.ScadaSerial = pd.SerialNumber and pd.IsActive = 1 and pd.ReadingDate between @StartDate and @EndDate)\r\nright join SupplyToLocationTypes lt on (s.SupplyToLocationTypeId = lt.SupplyToLocationTypeId)\r\nwhere\r\nlt.SupplyToId = 9\r\nand lt.SupplyToLocationTypeId in (31, 32)\r\ngroup by\r\nlt.SupplyToLocationTypeId, lt.SupplyToLocationName, pd.ReadingDate\r\n\r\n--select * from @tProfile\r\n\r\nselect distinct SupplyToLocationTypeId, SupplyToLocationName, sum(Energy/2.0) over (Partition by SupplyToLocationName) as Usage\r\nfrom @tProfile\r\nunion\r\nselect 900, 'Average Usage', avg(Energy) as Usage from (\r\n\tselect \r\n\tcase @PeriodType \r\n\t\twhen 1 then datepart(HH, ReadingDate) \r\n\t\twhen 2 then datepart(DD, ReadingDate)\r\n\t\twhen 3 then datepart(DD, ReadingDate)\r\n\t\twhen 4 then datepart(MM, ReadingDate)\r\n\t\telse datepart(DD, ReadingDate) \r\n\t\tend as dt\r\n\t, sum(Energy/2.0) as Energy from @tProfile\r\n\tgroup by \r\n\tcase @PeriodType \r\n\t\twhen 1 then datepart(HH, ReadingDate) \r\n\t\twhen 2 then datepart(DD, ReadingDate)\r\n\t\twhen 3 then datepart(DD, ReadingDate)\r\n\t\twhen 4 then datepart(MM, ReadingDate)\r\n\t\telse datepart(DD, ReadingDate) \r\n\t\tend\r\n\t) a\r\nunion\r\nselect 901, 'Maximum Usage', max(Energy) as Usage from (\r\n\tselect case @PeriodType when 1 then datepart(HH, ReadingDate) when 4 then datepart(MM, ReadingDate) else datepart(DD, ReadingDate) end as dt, sum(Energy/2.0) as Energy from @tProfile\r\n\tgroup by case @PeriodType when 1 then datepart(HH, ReadingDate) when 4 then datepart(MM, ReadingDate) else datepart(DD, ReadingDate) end\r\n\t) a\r\nunion\r\nselect 902, 'Meters with Alarms', Alarms from (\r\n\tselect count(distinct ma.AMRMeterId) as Alarms\r\n\tfrom \r\n\tAMRMeterTriggeredAlarms ta\r\n\tjoin AMRMeterAlarms ma on (ta.AMRMeterAlarmId = ma.AMRMeterAlarmId)\r\n\tjoin AMRMeters m on (ma.AMRMeterId = m.Id)\r\n\twhere\r\n\t(m.BuildingId = @BuildingId or @BuildingId = 0)\r\n\tand ta.OccStartDTM between @StartDate and @EndDate\r\n\tand ta.Acknowledged = 0\r\n\t) a\r\norder by\r\nSupplyToLocationTypeId\r\n\r\nif @PeriodType = 1 --Daily\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Month], [Day], [Hour], sum(Energy/2.0) as Usage\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Month], [Day], [Hour]\r\n\torder by\r\n\tSupplyToLocationName, [Month], [Day], [Hour]\r\nend\r\n\r\nif @PeriodType = 2 --Weekly\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Month], [Day], sum(Energy/2.0) as Usage\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Month], [Day]\r\n\torder by\r\n\tSupplyToLocationName, [Month], [Day]\r\nend\r\n\r\nif @PeriodType = 3 --Monthly\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Month], [Day], [WeekDay]\r\n\t, case [WeekDay] \r\n\t\twhen 1 then 'Su'\r\n\t\twhen 2 then 'Mo'\r\n\t\twhen 3 then 'Tu'\r\n\t\twhen 4 then 'We'\r\n\t\twhen 5 then 'Th'\r\n\t\twhen 6 then 'Fr'\r\n\t\twhen 7 then 'Sa'\r\n\t\tend as [DayOfWeek]\r\n\t, sum(Energy/2.0) as Usage\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Month], [Day], [WeekDay]\r\n\torder by\r\n\tSupplyToLocationName, [Month], [Day], [WeekDay]\r\nend\r\n\r\nif @PeriodType = 4 --Yearly\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Month]\r\n\t, case [Month] \r\n\t\twhen 1 then 'Jan'\r\n\t\twhen 2 then 'Feb'\r\n\t\twhen 3 then 'Mar'\r\n\t\twhen 4 then 'Apr'\r\n\t\twhen 5 then 'May'\r\n\t\twhen 6 then 'Jun'\r\n\t\twhen 7 then 'Jul'\r\n\t\twhen 8 then 'Aug'\r\n\t\twhen 9 then 'Sep'\r\n\t\twhen 10 then 'Oct'\r\n\t\twhen 11 then 'Nov'\r\n\t\twhen 12 then 'Dec'\r\n\t\tend as [MonthShort]\r\n\t, sum(Energy/2.0) as Usage\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Month]\r\n\torder by\r\n\tSupplyToLocationName, [Month]\r\nend\r\n\r\nselect ReadingDate, sum(Energy) as Usage from @tProfile where ReadingDate is not null group by ReadingDate order by ReadingDate\r\n");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql("CREATE OR ALTER PROC [dbo].[spDBSmartServicesMainElectricity]\r\n(\r\n@BuildingId int,\r\n@PeriodType int,\r\n@StartDate smalldatetime,\r\n@EndDate smalldatetime\r\n)\r\n\r\nAS\r\n\r\n--declare\r\n--@BuildingId int = 0,\r\n--@PeriodType int = 1,\r\n--@StartDate smalldatetime = '2023-12-14',\r\n--@EndDate smalldatetime = '2023-12-14'\r\n\r\ndeclare @tSupplies table (Id int identity(1,1), BuildingId int, ScadaSerial varchar(150), SupplyTypeId int, SupplyTypeName varchar(150),\r\n\t\t\t\t\t\t\tSupplyToId int, SupplyToName varchar(150), SupplyToLocationTypeId int, SupplyToLocationTypeName varchar(150),\r\n\t\t\t\t\t\t\tEnergy decimal(18,4) null)\r\n\r\ndeclare @tProfile table (Id int identity(1,1), SupplyToLocationTypeId int, SupplyToLocationName varchar(150), ReadingDate smalldatetime, [Month] int, [Day] int, [Hour] int\r\n\t\t\t\t\t\t\t, [WeekDay] int, Energy decimal(18,4), MaxDemand decimal(18,4))\r\n\r\n--get all bulk electricity meters for the building\r\ninsert into @tSupplies (BuildingId, ScadaSerial, SupplyTypeId, SupplyTypeName, SupplyToId, SupplyToName, SupplyToLocationTypeId, SupplyToLocationTypeName)\r\nselect distinct\r\nmm.BuildingId, mm.ScadaSerial, s.SupplyTypeId, s.SupplyTypeName\r\n, st.SupplyToId, st.SupplyToName, lt.SupplyToLocationTypeId, lt.SupplyToLocationName\r\nfrom\r\nMappedMeters mm\r\njoin SupplyTypes s on (mm.SupplyTypeId = s.SupplyTypeId)\r\njoin SupplyTos st on (s.SupplyTypeId = st.SupplyTypeId and mm.SupplyToId = st.SupplyToId)\r\njoin SupplyToLocationTypes lt on (st.SupplyToId = lt.SupplyToId and mm.LocationTypeId = lt.SupplyToLocationTypeId)\r\nwhere\r\n(mm.BuildingId = @BuildingId or @BuildingId = 0)\r\nand s.SupplyTypeId = 1\r\nand st.SupplyToId = 1\r\n\r\ninsert into @tProfile\r\nselect \r\nlt.SupplyToLocationTypeId, lt.SupplyToLocationName, pd.ReadingDate\r\n, DATEPART(MM, pd.ReadingDate) as [Month]\r\n, DATEPART(DD, pd.ReadingDate) as [Day]\r\n, DATEPART(HH, pd.ReadingDate) as [Hour]\r\n, DATEPART(W, pd.ReadingDate) as [WeekDay]\r\n, (case when lt.SupplyToLocationTypeId is null then 0 else sum(isnull(P1, 0)) end) as Energy\r\n, (sum(isnull(pd.kVA, 0))) as MaxDemand\r\nfrom \r\n@tSupplies s\r\njoin ScadaProfileData pd on (s.ScadaSerial = pd.SerialNumber and pd.IsActive = 1 and pd.ReadingDate between @StartDate and @EndDate and pd.IsActive = 1)\r\nright join SupplyToLocationTypes lt on (s.SupplyToLocationTypeId = lt.SupplyToLocationTypeId)\r\nwhere\r\nlt.SupplyToId = 1\r\nand lt.SupplyToLocationTypeId in (1, 2, 3, 4, 56)\r\ngroup by\r\nlt.SupplyToLocationTypeId, lt.SupplyToLocationName, pd.ReadingDate\r\n\r\n--select * from @tProfile\r\n\r\nselect distinct SupplyToLocationTypeId, SupplyToLocationName, sum(Energy/2.0) over (Partition by SupplyToLocationName) as Energy\r\nfrom @tProfile\r\nunion\r\nselect 9999, 'Maximum Demand', max(MaxDemand) from @tProfile\r\norder by\r\nSupplyToLocationTypeId\r\n\r\nif @PeriodType = 1 --Daily\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Hour], sum(Energy/2.0) as Energy\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Hour]\r\n\torder by\r\n\tSupplyToLocationName, [Hour]\r\nend\r\n\r\nif @PeriodType = 2 --Weekly\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Month], [Day], sum(Energy/2.0) as Energy\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Month], [Day]\r\n\torder by\r\n\tSupplyToLocationName, [Month], [Day]\r\nend\r\n\r\nif @PeriodType = 3 --Monthly\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Day], [WeekDay]\r\n\t, case [WeekDay] \r\n\t\twhen 1 then 'Su'\r\n\t\twhen 2 then 'Mo'\r\n\t\twhen 3 then 'Tu'\r\n\t\twhen 4 then 'We'\r\n\t\twhen 5 then 'Th'\r\n\t\twhen 6 then 'Fr'\r\n\t\twhen 7 then 'Sa'\r\n\t\tend as [WeekDay]\r\n\t, sum(Energy/2.0) as Energy\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Day], [WeekDay]\r\n\torder by\r\n\tSupplyToLocationName, [Day]\r\nend\r\n\r\nif @PeriodType = 4 --Yearly\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Month]\r\n\t, case [Month] \r\n\t\twhen 1 then 'Jan'\r\n\t\twhen 2 then 'Feb'\r\n\t\twhen 3 then 'Mar'\r\n\t\twhen 4 then 'Apr'\r\n\t\twhen 5 then 'May'\r\n\t\twhen 6 then 'Jun'\r\n\t\twhen 7 then 'Jul'\r\n\t\twhen 8 then 'Aug'\r\n\t\twhen 9 then 'Sep'\r\n\t\twhen 10 then 'Oct'\r\n\t\twhen 11 then 'Nov'\r\n\t\twhen 12 then 'Dec'\r\n\t\tend as [WeekDay]\r\n\t, sum(Energy/2.0) as Energy\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Month]\r\n\torder by\r\n\tSupplyToLocationName, [Month]\r\nend\r\n\r\nselect ReadingDate, sum(Energy) as Energy, Max(MaxDemand) as MaxDemand from @tProfile where ReadingDate is not null group by ReadingDate order by ReadingDate\r\n\r\nSelect top 1 ReadingDate, Energy, MaxDemand, isnull((Energy / nullif(MaxDemand, 0)), 0) as PowerFactor from @tProfile where MaxDemand = (Select max(MaxDemand) from @tProfile)\r\n");
            migrationBuilder.Sql("CREATE OR ALTER PROC [dbo].[spDBSmartServicesMainWater]\r\n(\r\n@BuildingId int,\r\n@PeriodType int,\r\n@StartDate smalldatetime,\r\n@EndDate smalldatetime\r\n)\r\n\r\nAS\r\n\r\n--declare\r\n--@BuildingId int = 0,\r\n--@PeriodType int = 4,\r\n--@StartDate smalldatetime = '2023-01-01',\r\n--@EndDate smalldatetime = '2023-12-30'\r\n\r\ndeclare @tSupplies table (Id int identity(1,1), BuildingId int, ScadaSerial varchar(150), SupplyTypeId int, SupplyTypeName varchar(150),\r\n\t\t\t\t\t\t\tSupplyToId int, SupplyToName varchar(150), SupplyToLocationTypeId int, SupplyToLocationTypeName varchar(150),\r\n\t\t\t\t\t\t\tEnergy decimal(18,4) null)\r\n\r\ndeclare @tProfile table (Id int identity(1,1), SupplyToLocationTypeId int, SupplyToLocationName varchar(150), ReadingDate smalldatetime, [Month] int, [Day] int, [Hour] int\r\n\t\t\t\t\t\t\t, [WeekDay] int, Energy decimal(18,4), MaxDemand decimal(18,4))\r\n\r\n--get all bulk electricity meters for the building\r\ninsert into @tSupplies (BuildingId, ScadaSerial, SupplyTypeId, SupplyTypeName, SupplyToId, SupplyToName, SupplyToLocationTypeId, SupplyToLocationTypeName)\r\nselect distinct\r\nmm.BuildingId, mm.ScadaSerial, s.SupplyTypeId, s.SupplyTypeName\r\n, st.SupplyToId, st.SupplyToName, lt.SupplyToLocationTypeId, lt.SupplyToLocationName\r\nfrom\r\nMappedMeters mm\r\njoin SupplyTypes s on (mm.SupplyTypeId = s.SupplyTypeId)\r\njoin SupplyTos st on (s.SupplyTypeId = st.SupplyTypeId and mm.SupplyToId = st.SupplyToId)\r\njoin SupplyToLocationTypes lt on (st.SupplyToId = lt.SupplyToId and mm.LocationTypeId = lt.SupplyToLocationTypeId)\r\nwhere\r\n(mm.BuildingId = @BuildingId or @BuildingId = 0)\r\nand s.SupplyTypeId = 4\r\nand st.SupplyToId = 9\r\n\r\ninsert into @tProfile\r\nselect \r\nlt.SupplyToLocationTypeId, lt.SupplyToLocationName, pd.ReadingDate\r\n, DATEPART(MM, pd.ReadingDate) as [Month]\r\n, DATEPART(DD, pd.ReadingDate) as [Day]\r\n, DATEPART(HH, pd.ReadingDate) as [Hour]\r\n, DATEPART(W, pd.ReadingDate) as [WeekDay]\r\n, (case when lt.SupplyToLocationTypeId is null then 0 else sum(isnull(P1, 0)) end) as Energy\r\n, sum((isnull(pd.kVA, 0))) as MaxDemand\r\n--pd.*\r\nfrom \r\n@tSupplies s\r\njoin ScadaProfileData pd on (s.ScadaSerial = pd.SerialNumber and pd.IsActive = 1 and pd.ReadingDate between @StartDate and @EndDate)\r\nright join SupplyToLocationTypes lt on (s.SupplyToLocationTypeId = lt.SupplyToLocationTypeId)\r\nwhere\r\nlt.SupplyToId = 9\r\nand lt.SupplyToLocationTypeId in (31, 32)\r\ngroup by\r\nlt.SupplyToLocationTypeId, lt.SupplyToLocationName, pd.ReadingDate\r\n\r\n--select * from @tProfile\r\n\r\nselect distinct SupplyToLocationTypeId, SupplyToLocationName, sum(Energy/2.0) over (Partition by SupplyToLocationName) as Usage\r\nfrom @tProfile\r\nunion\r\nselect 900, 'Average Usage', avg(Energy) as Usage from (\r\n\tselect \r\n\tcase @PeriodType \r\n\t\twhen 1 then datepart(HH, ReadingDate) \r\n\t\twhen 2 then datepart(DD, ReadingDate)\r\n\t\twhen 3 then datepart(DD, ReadingDate)\r\n\t\twhen 4 then datepart(MM, ReadingDate)\r\n\t\telse datepart(DD, ReadingDate) \r\n\t\tend as dt\r\n\t, sum(Energy/2.0) as Energy from @tProfile\r\n\tgroup by \r\n\tcase @PeriodType \r\n\t\twhen 1 then datepart(HH, ReadingDate) \r\n\t\twhen 2 then datepart(DD, ReadingDate)\r\n\t\twhen 3 then datepart(DD, ReadingDate)\r\n\t\twhen 4 then datepart(MM, ReadingDate)\r\n\t\telse datepart(DD, ReadingDate) \r\n\t\tend\r\n\t) a\r\nunion\r\nselect 901, 'Maximum Usage', max(Energy) as Usage from (\r\n\tselect case @PeriodType when 1 then datepart(HH, ReadingDate) when 4 then datepart(MM, ReadingDate) else datepart(DD, ReadingDate) end as dt, sum(Energy/2.0) as Energy from @tProfile\r\n\tgroup by case @PeriodType when 1 then datepart(HH, ReadingDate) when 4 then datepart(MM, ReadingDate) else datepart(DD, ReadingDate) end\r\n\t) a\r\nunion\r\nselect 902, 'Meters with Alarms', Alarms from (\r\n\tselect count(distinct ma.AMRMeterId) as Alarms\r\n\tfrom \r\n\tAMRMeterTriggeredAlarms ta\r\n\tjoin AMRMeterAlarms ma on (ta.AMRMeterAlarmId = ma.AMRMeterAlarmId)\r\n\tjoin AMRMeters m on (ma.AMRMeterId = m.Id)\r\n\twhere\r\n\t(m.BuildingId = @BuildingId or @BuildingId = 0)\r\n\tand ta.OccStartDTM between @StartDate and @EndDate\r\n\tand ta.Acknowledged = 0\r\n\t) a\r\norder by\r\nSupplyToLocationTypeId\r\n\r\nif @PeriodType = 1 --Daily\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Hour], sum(Energy/2.0) as Usage\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Hour]\r\n\torder by\r\n\tSupplyToLocationName, [Hour]\r\nend\r\n\r\nif @PeriodType = 2 --Weekly\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Month], [Day], sum(Energy/2.0) as Usage\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Month], [Day]\r\n\torder by\r\n\tSupplyToLocationName, [Month], [Day]\r\nend\r\n\r\nif @PeriodType = 3 --Monthly\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Day], [WeekDay]\r\n\t, case [WeekDay] \r\n\t\twhen 1 then 'Su'\r\n\t\twhen 2 then 'Mo'\r\n\t\twhen 3 then 'Tu'\r\n\t\twhen 4 then 'We'\r\n\t\twhen 5 then 'Th'\r\n\t\twhen 6 then 'Fr'\r\n\t\twhen 7 then 'Sa'\r\n\t\tend as [WeekDay]\r\n\t, sum(Energy/2.0) as Usage\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Day], [WeekDay]\r\n\torder by\r\n\tSupplyToLocationName, [Day]\r\nend\r\n\r\nif @PeriodType = 4 --Yearly\r\nbegin\r\n\tselect\r\n\tSupplyToLocationName, [Month]\r\n\t, case [Month] \r\n\t\twhen 1 then 'Jan'\r\n\t\twhen 2 then 'Feb'\r\n\t\twhen 3 then 'Mar'\r\n\t\twhen 4 then 'Apr'\r\n\t\twhen 5 then 'May'\r\n\t\twhen 6 then 'Jun'\r\n\t\twhen 7 then 'Jul'\r\n\t\twhen 8 then 'Aug'\r\n\t\twhen 9 then 'Sep'\r\n\t\twhen 10 then 'Oct'\r\n\t\twhen 11 then 'Nov'\r\n\t\twhen 12 then 'Dec'\r\n\t\tend as [WeekDay]\r\n\t, sum(Energy/2.0) as Usage\r\n\tfrom\r\n\t@tProfile\r\n\twhere\r\n\t[Hour] is not null\r\n\tgroup by\r\n\tSupplyToLocationName, [Month]\r\n\torder by\r\n\tSupplyToLocationName, [Month]\r\nend\r\n\r\nselect ReadingDate, sum(Energy) as Usage from @tProfile where ReadingDate is not null group by ReadingDate order by ReadingDate\r\n");
        }
    }
}
